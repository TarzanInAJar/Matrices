/*
 * AnalogyFrame.java
 *
 * Created on November 12, 2007, 10:34 AM
 */
package gov.sandia.cognition.generator.matrix.ui;

import gov.sandia.cognition.generator.matrix.RasterSettings;
import gov.sandia.cognition.generator.matrix.SGMAnswerChoicesImage;
import gov.sandia.cognition.generator.matrix.SGMLayer;
import gov.sandia.cognition.generator.matrix.SGMMatrixImage;
import gov.sandia.cognition.generator.matrix.SGMMatrixSize;
import gov.sandia.cognition.generator.matrix.SGMMatrix;
import gov.sandia.cognition.generator.matrix.locationtransform.SGMLocationTransformGenerator.LocationTransformType;
import gov.sandia.cognition.generator.matrix.structure.SGMStructureFeature;
import gov.sandia.cognition.generator.matrix.structure.base.BaseSGMStructureFeature;
import gov.sandia.cognition.generator.matrix.structure.base.BaseSGMStructureFeatureGenerator;
import gov.sandia.cognition.generator.matrix.structure.base.BaseSGMStructureFeatureGenerator.BaseStructureFeatureType;
import gov.sandia.cognition.generator.matrix.structure.supplemental.SupplementalSGMStructureFeature;
import gov.sandia.cognition.generator.matrix.structure.supplemental.SupplementalSGMStructureFeatureGenerator;
import gov.sandia.cognition.generator.matrix.structure.supplemental.SupplementalSGMStructureFeatureGenerator.SupplementalStructureFeatureType;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;

/**
 *
 * @author  zobenz
 */
public class SGMBuilderFrame extends javax.swing.JFrame
{
    
    
    private int pixelsBetweenCells = 2;
    private int sgmCellImagePixelSize = 100;
    private int numAnswerMatrixColumns = 4;
    private SGMMatrix currentMatrix;
    
    /** Creates new form SGMBuilderFrame */
    public SGMBuilderFrame()
    {
        initComponents();                

        this.explanationTextArea.setText("");        
        this.rngSeedFormattedTextField.setText(
            Long.toString(System.currentTimeMillis()));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        buttonGroup6 = new javax.swing.ButtonGroup();
        buttonGroup7 = new javax.swing.ButtonGroup();
        buttonGroup8 = new javax.swing.ButtonGroup();
        buttonGroup9 = new javax.swing.ButtonGroup();
        buttonGroup10 = new javax.swing.ButtonGroup();
        buttonGroup11 = new javax.swing.ButtonGroup();
        buttonGroup12 = new javax.swing.ButtonGroup();
        buttonGroup13 = new javax.swing.ButtonGroup();
        buttonGroup14 = new javax.swing.ButtonGroup();
        buttonGroup15 = new javax.swing.ButtonGroup();
        buttonGroup16 = new javax.swing.ButtonGroup();
        buttonGroup17 = new javax.swing.ButtonGroup();
        matrixImagePanel = new gov.sandia.cognition.generator.matrix.ui.ImagePanel();
        answersImagePanel = new gov.sandia.cognition.generator.matrix.ui.ImagePanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        explanationTextArea = new javax.swing.JTextArea();
        OneLayer = new javax.swing.JRadioButton();
        TwoLayers = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        LayerOne = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        OneBaseShapeRepetition = new javax.swing.JRadioButton();
        OneBaseOR = new javax.swing.JRadioButton();
        OneBaseAND = new javax.swing.JRadioButton();
        OneBaseXOR = new javax.swing.JRadioButton();
        OneBaseDiagBL = new javax.swing.JRadioButton();
        OneBaseDiagTL = new javax.swing.JRadioButton();
        OneBaseVertical = new javax.swing.JRadioButton();
        OneBaseHorizontal = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        OneBaseTopLeftOut = new javax.swing.JRadioButton();
        OneSecondSupplementalDisabled = new javax.swing.JRadioButton();
        OneSecondSupplementalApplyScaling = new javax.swing.JRadioButton();
        OneSecondSupplementalApplyRotation = new javax.swing.JRadioButton();
        OneSecondSupplementalFillPatternRepetition = new javax.swing.JRadioButton();
        OneSecondSupplementalTranslationalNumerosity = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        OneSecondSupplementalDiagBL = new javax.swing.JRadioButton();
        OneSecondSupplementalDiagTL = new javax.swing.JRadioButton();
        OneSecondSupplementalVertical = new javax.swing.JRadioButton();
        OneSecondSupplementalHorizontal = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        OneSecondSupplementalTopLeftOut = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        OneFirstSupplementalDisabled = new javax.swing.JRadioButton();
        OneFirstSupplementalApplyScaling = new javax.swing.JRadioButton();
        OneFirstSupplementalApplyRotation = new javax.swing.JRadioButton();
        OneFirstSupplementalFillPatternRepetition = new javax.swing.JRadioButton();
        OneFirstSupplementalTranslationalNumerosity = new javax.swing.JRadioButton();
        OneFirstSupplementalDiagBL = new javax.swing.JRadioButton();
        OneFirstSupplementalDiagTL = new javax.swing.JRadioButton();
        OneFirstSupplementalVertical = new javax.swing.JRadioButton();
        OneFirstSupplementalHorizontal = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        OneFirstSupplementalTopLeftOut = new javax.swing.JRadioButton();
        jLabel20 = new javax.swing.JLabel();
        OneThirdSupplementalHorizontal = new javax.swing.JRadioButton();
        OneThirdSupplementalVertical = new javax.swing.JRadioButton();
        OneThirdSupplementalDiagTL = new javax.swing.JRadioButton();
        OneThirdSupplementalDiagBL = new javax.swing.JRadioButton();
        OneThirdSupplementalTopLeftOut = new javax.swing.JRadioButton();
        OneThirdSupplementalTranslationalNumerosity = new javax.swing.JRadioButton();
        OneThirdSupplementalFillPatternRepetition = new javax.swing.JRadioButton();
        OneThirdSupplementalApplyScaling = new javax.swing.JRadioButton();
        OneThirdSupplementalApplyRotation = new javax.swing.JRadioButton();
        OneThirdSupplementalDisabled = new javax.swing.JRadioButton();
        jLabel21 = new javax.swing.JLabel();
        OneFirstSupplementalChangeFillPattern = new javax.swing.JRadioButton();
        OneSecondSupplementalChangeFillPattern = new javax.swing.JRadioButton();
        OneThirdSupplementalChangeFillPattern = new javax.swing.JRadioButton();
        LayerTwo = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        TwoBaseShapeRepetition = new javax.swing.JRadioButton();
        TwoBaseOR = new javax.swing.JRadioButton();
        TwoBaseAND = new javax.swing.JRadioButton();
        TwoBaseXOR = new javax.swing.JRadioButton();
        TwoBaseDiagBL = new javax.swing.JRadioButton();
        TwoBaseDiagTL = new javax.swing.JRadioButton();
        TwoBaseVertical = new javax.swing.JRadioButton();
        TwoBaseHorizontal = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();
        TwoBaseTopLeftOut = new javax.swing.JRadioButton();
        TwoSecondSupplementalDisabled = new javax.swing.JRadioButton();
        TwoSecondSupplementalApplyScaling = new javax.swing.JRadioButton();
        TwoSecondSupplementalApplyRotation = new javax.swing.JRadioButton();
        TwoSecondSupplementalFillPatternRepetition = new javax.swing.JRadioButton();
        TwoSecondSupplementalTranslationalNumerosity = new javax.swing.JRadioButton();
        jLabel10 = new javax.swing.JLabel();
        TwoSecondSupplementalDiagBL = new javax.swing.JRadioButton();
        TwoSecondSupplementalDiagTL = new javax.swing.JRadioButton();
        TwoSecondSupplementalVertical = new javax.swing.JRadioButton();
        TwoSecondSupplementalHorizontal = new javax.swing.JRadioButton();
        jLabel11 = new javax.swing.JLabel();
        TwoSecondSupplementalTopLeftOut = new javax.swing.JRadioButton();
        jLabel12 = new javax.swing.JLabel();
        TwoFirstSupplementalDisabled = new javax.swing.JRadioButton();
        TwoFirstSupplementalApplyScaling = new javax.swing.JRadioButton();
        TwoFirstSupplementalApplyRotation = new javax.swing.JRadioButton();
        TwoFirstSupplementalFillPatternRepetition = new javax.swing.JRadioButton();
        TwoFirstSupplementalTranslationalNumerosity = new javax.swing.JRadioButton();
        TwoFirstSupplementalDiagBL = new javax.swing.JRadioButton();
        TwoFirstSupplementalDiagTL = new javax.swing.JRadioButton();
        TwoFirstSupplementalVertical = new javax.swing.JRadioButton();
        TwoFirstSupplementalHorizontal = new javax.swing.JRadioButton();
        jLabel13 = new javax.swing.JLabel();
        TwoFirstSupplementalTopLeftOut = new javax.swing.JRadioButton();
        TwoThirdSupplementalDisabled = new javax.swing.JRadioButton();
        TwoThirdSupplementalApplyScaling = new javax.swing.JRadioButton();
        TwoThirdSupplementalApplyRotation = new javax.swing.JRadioButton();
        TwoThirdSupplementalFillPatternRepetition = new javax.swing.JRadioButton();
        TwoThirdSupplementalTranslationalNumerosity = new javax.swing.JRadioButton();
        jLabel18 = new javax.swing.JLabel();
        TwoThirdSupplementalDiagBL = new javax.swing.JRadioButton();
        TwoThirdSupplementalDiagTL = new javax.swing.JRadioButton();
        TwoThirdSupplementalVertical = new javax.swing.JRadioButton();
        TwoThirdSupplementalHorizontal = new javax.swing.JRadioButton();
        jLabel19 = new javax.swing.JLabel();
        TwoThirdSupplementalTopLeftOut = new javax.swing.JRadioButton();
        TwoFirstSupplementalChangeFillPattern = new javax.swing.JRadioButton();
        TwoSecondSupplementalChangeFillPattern = new javax.swing.JRadioButton();
        TwoThirdSupplementalChangeFillPattern = new javax.swing.JRadioButton();
        Generate = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        correctAnswerPositionFormattedTextField = new javax.swing.JFormattedTextField();
        jLabel17 = new javax.swing.JLabel();
        rngSeedFormattedTextField = new javax.swing.JFormattedTextField();
        newSeedButton = new javax.swing.JButton();
        saveImageButton = new javax.swing.JButton();
        jMenuBar3 = new javax.swing.JMenuBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        org.jdesktop.layout.GroupLayout answersImagePanelLayout = new org.jdesktop.layout.GroupLayout(answersImagePanel);
        answersImagePanel.setLayout(answersImagePanelLayout);
        answersImagePanelLayout.setHorizontalGroup(
            answersImagePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 415, Short.MAX_VALUE)
        );
        answersImagePanelLayout.setVerticalGroup(
            answersImagePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 214, Short.MAX_VALUE)
        );

        explanationTextArea.setColumns(20);
        explanationTextArea.setRows(5);
        explanationTextArea.setText("Test\nTest\nTest");
        jScrollPane1.setViewportView(explanationTextArea);

        buttonGroup1.add(OneLayer);
        OneLayer.setSelected(true);
        OneLayer.setText("One Layer");

        buttonGroup1.add(TwoLayers);
        TwoLayers.setText("Two Layers");

        jLabel5.setText("First Supplemental Structure Feature");

        LayerOne.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Base Structure Feature");

        buttonGroup2.add(OneBaseShapeRepetition);
        OneBaseShapeRepetition.setSelected(true);
        OneBaseShapeRepetition.setText("Shape Repetition");

        buttonGroup2.add(OneBaseOR);
        OneBaseOR.setText("Logical OR");

        buttonGroup2.add(OneBaseAND);
        OneBaseAND.setText("Logical AND");

        buttonGroup2.add(OneBaseXOR);
        OneBaseXOR.setText("Logical XOR");

        buttonGroup3.add(OneBaseDiagBL);
        OneBaseDiagBL.setText("Diagonal From Bottom Left");

        buttonGroup3.add(OneBaseDiagTL);
        OneBaseDiagTL.setText("Diagonal From Top Left");

        buttonGroup3.add(OneBaseVertical);
        OneBaseVertical.setText("Vertical");

        buttonGroup3.add(OneBaseHorizontal);
        OneBaseHorizontal.setSelected(true);
        OneBaseHorizontal.setText("Horizontal");

        jLabel2.setText("Location Transform");

        buttonGroup3.add(OneBaseTopLeftOut);
        OneBaseTopLeftOut.setText("Top Left Corner Out");

        buttonGroup6.add(OneSecondSupplementalDisabled);
        OneSecondSupplementalDisabled.setSelected(true);
        OneSecondSupplementalDisabled.setText("Disabled");

        buttonGroup6.add(OneSecondSupplementalApplyScaling);
        OneSecondSupplementalApplyScaling.setText("Apply Scaling");

        buttonGroup6.add(OneSecondSupplementalApplyRotation);
        OneSecondSupplementalApplyRotation.setText("Apply Rotation");

        buttonGroup6.add(OneSecondSupplementalFillPatternRepetition);
        OneSecondSupplementalFillPatternRepetition.setText("Fill Pattern Repetition");

        buttonGroup6.add(OneSecondSupplementalTranslationalNumerosity);
        OneSecondSupplementalTranslationalNumerosity.setText("Translational Numerosity");

        jLabel6.setText("Second Supplemental Feature");

        buttonGroup7.add(OneSecondSupplementalDiagBL);
        OneSecondSupplementalDiagBL.setText("Diagonal From Bottom Left");

        buttonGroup7.add(OneSecondSupplementalDiagTL);
        OneSecondSupplementalDiagTL.setText("Diagonal From Top Left");

        buttonGroup7.add(OneSecondSupplementalVertical);
        OneSecondSupplementalVertical.setText("Vertical");

        buttonGroup7.add(OneSecondSupplementalHorizontal);
        OneSecondSupplementalHorizontal.setSelected(true);
        OneSecondSupplementalHorizontal.setText("Horizontal");

        jLabel7.setText("Location Transform");

        buttonGroup7.add(OneSecondSupplementalTopLeftOut);
        OneSecondSupplementalTopLeftOut.setText("Top Left Corner Out");

        jLabel3.setText("First Supplemental Feature");

        buttonGroup4.add(OneFirstSupplementalDisabled);
        OneFirstSupplementalDisabled.setSelected(true);
        OneFirstSupplementalDisabled.setText("Disabled");

        buttonGroup4.add(OneFirstSupplementalApplyScaling);
        OneFirstSupplementalApplyScaling.setText("Apply Scaling");

        buttonGroup4.add(OneFirstSupplementalApplyRotation);
        OneFirstSupplementalApplyRotation.setText("Apply Rotation");

        buttonGroup4.add(OneFirstSupplementalFillPatternRepetition);
        OneFirstSupplementalFillPatternRepetition.setText("Fill Pattern Repetition");

        buttonGroup4.add(OneFirstSupplementalTranslationalNumerosity);
        OneFirstSupplementalTranslationalNumerosity.setText("Translational Numerosity");

        buttonGroup5.add(OneFirstSupplementalDiagBL);
        OneFirstSupplementalDiagBL.setText("Diagonal From Bottom Left");

        buttonGroup5.add(OneFirstSupplementalDiagTL);
        OneFirstSupplementalDiagTL.setText("Diagonal From Top Left");

        buttonGroup5.add(OneFirstSupplementalVertical);
        OneFirstSupplementalVertical.setText("Vertical");

        buttonGroup5.add(OneFirstSupplementalHorizontal);
        OneFirstSupplementalHorizontal.setSelected(true);
        OneFirstSupplementalHorizontal.setText("Horizontal");

        jLabel4.setText("Location Transform");

        buttonGroup5.add(OneFirstSupplementalTopLeftOut);
        OneFirstSupplementalTopLeftOut.setText("Top Left Corner Out");

        jLabel20.setText("Location Transform");

        buttonGroup15.add(OneThirdSupplementalHorizontal);
        OneThirdSupplementalHorizontal.setSelected(true);
        OneThirdSupplementalHorizontal.setText("Horizontal");

        buttonGroup15.add(OneThirdSupplementalVertical);
        OneThirdSupplementalVertical.setText("Vertical");

        buttonGroup15.add(OneThirdSupplementalDiagTL);
        OneThirdSupplementalDiagTL.setText("Diagonal From Top Left");

        buttonGroup15.add(OneThirdSupplementalDiagBL);
        OneThirdSupplementalDiagBL.setText("Diagonal From Bottom Left");

        buttonGroup15.add(OneThirdSupplementalTopLeftOut);
        OneThirdSupplementalTopLeftOut.setText("Top Left Corner Out");

        buttonGroup14.add(OneThirdSupplementalTranslationalNumerosity);
        OneThirdSupplementalTranslationalNumerosity.setText("Translational Numerosity");

        buttonGroup14.add(OneThirdSupplementalFillPatternRepetition);
        OneThirdSupplementalFillPatternRepetition.setText("Fill Pattern Repetition");

        buttonGroup14.add(OneThirdSupplementalApplyScaling);
        OneThirdSupplementalApplyScaling.setText("Apply Scaling");

        buttonGroup14.add(OneThirdSupplementalApplyRotation);
        OneThirdSupplementalApplyRotation.setText("Apply Rotation");

        buttonGroup14.add(OneThirdSupplementalDisabled);
        OneThirdSupplementalDisabled.setSelected(true);
        OneThirdSupplementalDisabled.setText("Disabled");

        jLabel21.setText("Third Supplemental Feature");

        buttonGroup4.add(OneFirstSupplementalChangeFillPattern);
        OneFirstSupplementalChangeFillPattern.setText("Change Fill Pattern ");

        buttonGroup4.add(OneSecondSupplementalChangeFillPattern);
        OneSecondSupplementalChangeFillPattern.setText("Change Fill Pattern ");

        buttonGroup4.add(OneThirdSupplementalChangeFillPattern);
        OneThirdSupplementalChangeFillPattern.setText("Change Fill Pattern ");

        org.jdesktop.layout.GroupLayout LayerOneLayout = new org.jdesktop.layout.GroupLayout(LayerOne);
        LayerOne.setLayout(LayerOneLayout);
        LayerOneLayout.setHorizontalGroup(
            LayerOneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(LayerOneLayout.createSequentialGroup()
                .addContainerGap()
                .add(LayerOneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(OneThirdSupplementalDisabled)
                    .add(OneThirdSupplementalApplyScaling)
                    .add(OneThirdSupplementalApplyRotation)
                    .add(OneThirdSupplementalFillPatternRepetition)
                    .add(OneThirdSupplementalTranslationalNumerosity)
                    .add(jLabel21)
                    .add(LayerOneLayout.createSequentialGroup()
                        .add(LayerOneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(OneSecondSupplementalDisabled)
                            .add(OneSecondSupplementalApplyScaling)
                            .add(OneSecondSupplementalApplyRotation)
                            .add(OneSecondSupplementalFillPatternRepetition)
                            .add(OneSecondSupplementalTranslationalNumerosity)
                            .add(jLabel6)
                            .add(jLabel3)
                            .add(OneFirstSupplementalDisabled)
                            .add(OneFirstSupplementalApplyScaling)
                            .add(OneFirstSupplementalApplyRotation)
                            .add(OneFirstSupplementalFillPatternRepetition)
                            .add(OneFirstSupplementalTranslationalNumerosity)
                            .add(OneFirstSupplementalChangeFillPattern)
                            .add(OneThirdSupplementalChangeFillPattern))
                        .add(42, 42, 42)
                        .add(LayerOneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(OneBaseTopLeftOut)
                            .add(OneBaseDiagBL)
                            .add(OneBaseDiagTL)
                            .add(OneBaseVertical)
                            .add(OneBaseHorizontal)
                            .add(jLabel2)
                            .add(OneFirstSupplementalDiagBL)
                            .add(OneFirstSupplementalDiagTL)
                            .add(OneFirstSupplementalVertical)
                            .add(OneFirstSupplementalHorizontal)
                            .add(jLabel4)
                            .add(OneFirstSupplementalTopLeftOut)
                            .add(OneSecondSupplementalDiagBL)
                            .add(OneSecondSupplementalDiagTL)
                            .add(OneSecondSupplementalVertical)
                            .add(OneSecondSupplementalHorizontal)
                            .add(jLabel7)
                            .add(OneSecondSupplementalTopLeftOut)
                            .add(OneThirdSupplementalDiagBL)
                            .add(OneThirdSupplementalDiagTL)
                            .add(OneThirdSupplementalVertical)
                            .add(OneThirdSupplementalHorizontal)
                            .add(jLabel20)
                            .add(OneThirdSupplementalTopLeftOut)))
                    .add(OneSecondSupplementalChangeFillPattern))
                .addContainerGap(20, Short.MAX_VALUE))
            .add(LayerOneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(LayerOneLayout.createSequentialGroup()
                    .addContainerGap()
                    .add(LayerOneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(jLabel1)
                        .add(OneBaseShapeRepetition)
                        .add(OneBaseOR)
                        .add(OneBaseAND)
                        .add(OneBaseXOR))
                    .addContainerGap(315, Short.MAX_VALUE)))
        );
        LayerOneLayout.setVerticalGroup(
            LayerOneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(LayerOneLayout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel2)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(OneBaseHorizontal)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(OneBaseVertical)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(OneBaseDiagTL)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(OneBaseDiagBL)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(OneBaseTopLeftOut)
                .add(18, 18, 18)
                .add(LayerOneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(LayerOneLayout.createSequentialGroup()
                        .add(jLabel3)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(OneFirstSupplementalDisabled)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(OneFirstSupplementalApplyRotation)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(OneFirstSupplementalApplyScaling)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(OneFirstSupplementalFillPatternRepetition)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(OneFirstSupplementalChangeFillPattern)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(OneFirstSupplementalTranslationalNumerosity))
                    .add(LayerOneLayout.createSequentialGroup()
                        .add(jLabel4)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(OneFirstSupplementalHorizontal)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(OneFirstSupplementalVertical)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(OneFirstSupplementalDiagTL)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(OneFirstSupplementalDiagBL))
                    .add(LayerOneLayout.createSequentialGroup()
                        .add(138, 138, 138)
                        .add(OneFirstSupplementalTopLeftOut)))
                .add(24, 24, 24)
                .add(LayerOneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(LayerOneLayout.createSequentialGroup()
                        .add(jLabel6)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(OneSecondSupplementalDisabled)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(OneSecondSupplementalApplyRotation)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(OneSecondSupplementalApplyScaling)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(OneSecondSupplementalFillPatternRepetition)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(OneSecondSupplementalChangeFillPattern)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(OneSecondSupplementalTranslationalNumerosity))
                    .add(LayerOneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(LayerOneLayout.createSequentialGroup()
                            .add(jLabel7)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(OneSecondSupplementalHorizontal)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(OneSecondSupplementalVertical)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(OneSecondSupplementalDiagTL)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(OneSecondSupplementalDiagBL))
                        .add(LayerOneLayout.createSequentialGroup()
                            .add(138, 138, 138)
                            .add(OneSecondSupplementalTopLeftOut))))
                .add(18, 18, 18)
                .add(LayerOneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(LayerOneLayout.createSequentialGroup()
                        .add(jLabel21)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(OneThirdSupplementalDisabled)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(OneThirdSupplementalApplyRotation)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(OneThirdSupplementalApplyScaling)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(OneThirdSupplementalFillPatternRepetition)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(OneThirdSupplementalChangeFillPattern)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(OneThirdSupplementalTranslationalNumerosity))
                    .add(LayerOneLayout.createSequentialGroup()
                        .add(jLabel20)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(OneThirdSupplementalHorizontal)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(OneThirdSupplementalVertical)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(OneThirdSupplementalDiagTL)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(OneThirdSupplementalDiagBL))
                    .add(LayerOneLayout.createSequentialGroup()
                        .add(138, 138, 138)
                        .add(OneThirdSupplementalTopLeftOut)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .add(LayerOneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(LayerOneLayout.createSequentialGroup()
                    .add(5, 5, 5)
                    .add(jLabel1)
                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                    .add(OneBaseShapeRepetition)
                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                    .add(OneBaseAND)
                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                    .add(OneBaseOR)
                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                    .add(OneBaseXOR)
                    .addContainerGap(597, Short.MAX_VALUE)))
        );

        LayerTwo.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel8.setText("Base Structure Feature");

        buttonGroup8.add(TwoBaseShapeRepetition);
        TwoBaseShapeRepetition.setSelected(true);
        TwoBaseShapeRepetition.setText("Shape Repetition");

        buttonGroup8.add(TwoBaseOR);
        TwoBaseOR.setText("Logical OR");

        buttonGroup8.add(TwoBaseAND);
        TwoBaseAND.setText("Logical AND");

        buttonGroup8.add(TwoBaseXOR);
        TwoBaseXOR.setText("Logical XOR");

        buttonGroup9.add(TwoBaseDiagBL);
        TwoBaseDiagBL.setText("Diagonal From Bottom Left");

        buttonGroup9.add(TwoBaseDiagTL);
        TwoBaseDiagTL.setText("Diagonal From Top Left");

        buttonGroup9.add(TwoBaseVertical);
        TwoBaseVertical.setText("Vertical");

        buttonGroup9.add(TwoBaseHorizontal);
        TwoBaseHorizontal.setSelected(true);
        TwoBaseHorizontal.setText("Horizontal");

        jLabel9.setText("Location Transform");

        buttonGroup9.add(TwoBaseTopLeftOut);
        TwoBaseTopLeftOut.setText("Top Left Corner Out");

        buttonGroup12.add(TwoSecondSupplementalDisabled);
        TwoSecondSupplementalDisabled.setSelected(true);
        TwoSecondSupplementalDisabled.setText("Disabled");

        buttonGroup12.add(TwoSecondSupplementalApplyScaling);
        TwoSecondSupplementalApplyScaling.setText("Apply Scaling");

        buttonGroup12.add(TwoSecondSupplementalApplyRotation);
        TwoSecondSupplementalApplyRotation.setText("Apply Rotation");

        buttonGroup12.add(TwoSecondSupplementalFillPatternRepetition);
        TwoSecondSupplementalFillPatternRepetition.setText("Fill Pattern Repetition");

        buttonGroup12.add(TwoSecondSupplementalTranslationalNumerosity);
        TwoSecondSupplementalTranslationalNumerosity.setText("Translational Numerosity");

        jLabel10.setText("Second Supplemental Feature");

        buttonGroup13.add(TwoSecondSupplementalDiagBL);
        TwoSecondSupplementalDiagBL.setText("Diagonal From Bottom Left");

        buttonGroup13.add(TwoSecondSupplementalDiagTL);
        TwoSecondSupplementalDiagTL.setText("Diagonal From Top Left");

        buttonGroup13.add(TwoSecondSupplementalVertical);
        TwoSecondSupplementalVertical.setText("Vertical");

        buttonGroup13.add(TwoSecondSupplementalHorizontal);
        TwoSecondSupplementalHorizontal.setSelected(true);
        TwoSecondSupplementalHorizontal.setText("Horizontal");

        jLabel11.setText("Location Transform");

        buttonGroup13.add(TwoSecondSupplementalTopLeftOut);
        TwoSecondSupplementalTopLeftOut.setText("Top Left Corner Out");

        jLabel12.setText("First Supplemental Feature");

        buttonGroup10.add(TwoFirstSupplementalDisabled);
        TwoFirstSupplementalDisabled.setSelected(true);
        TwoFirstSupplementalDisabled.setText("Disabled");

        buttonGroup10.add(TwoFirstSupplementalApplyScaling);
        TwoFirstSupplementalApplyScaling.setText("Apply Scaling");

        buttonGroup10.add(TwoFirstSupplementalApplyRotation);
        TwoFirstSupplementalApplyRotation.setText("Apply Rotation");

        buttonGroup10.add(TwoFirstSupplementalFillPatternRepetition);
        TwoFirstSupplementalFillPatternRepetition.setText("Fill Pattern Repetition");

        buttonGroup10.add(TwoFirstSupplementalTranslationalNumerosity);
        TwoFirstSupplementalTranslationalNumerosity.setText("Translational Numerosity");

        buttonGroup11.add(TwoFirstSupplementalDiagBL);
        TwoFirstSupplementalDiagBL.setText("Diagonal From Bottom Left");

        buttonGroup11.add(TwoFirstSupplementalDiagTL);
        TwoFirstSupplementalDiagTL.setText("Diagonal From Top Left");

        buttonGroup11.add(TwoFirstSupplementalVertical);
        TwoFirstSupplementalVertical.setText("Vertical");

        buttonGroup11.add(TwoFirstSupplementalHorizontal);
        TwoFirstSupplementalHorizontal.setSelected(true);
        TwoFirstSupplementalHorizontal.setText("Horizontal");

        jLabel13.setText("Location Transform");

        buttonGroup11.add(TwoFirstSupplementalTopLeftOut);
        TwoFirstSupplementalTopLeftOut.setText("Top Left Corner Out");

        buttonGroup16.add(TwoThirdSupplementalDisabled);
        TwoThirdSupplementalDisabled.setSelected(true);
        TwoThirdSupplementalDisabled.setText("Disabled");

        buttonGroup16.add(TwoThirdSupplementalApplyScaling);
        TwoThirdSupplementalApplyScaling.setText("Apply Scaling");

        buttonGroup16.add(TwoThirdSupplementalApplyRotation);
        TwoThirdSupplementalApplyRotation.setText("Apply Rotation");

        buttonGroup16.add(TwoThirdSupplementalFillPatternRepetition);
        TwoThirdSupplementalFillPatternRepetition.setText("Fill Pattern Repetition");

        buttonGroup16.add(TwoThirdSupplementalTranslationalNumerosity);
        TwoThirdSupplementalTranslationalNumerosity.setText("Translational Numerosity");

        jLabel18.setText("Third Supplemental Feature");

        buttonGroup17.add(TwoThirdSupplementalDiagBL);
        TwoThirdSupplementalDiagBL.setText("Diagonal From Bottom Left");

        buttonGroup17.add(TwoThirdSupplementalDiagTL);
        TwoThirdSupplementalDiagTL.setText("Diagonal From Top Left");

        buttonGroup17.add(TwoThirdSupplementalVertical);
        TwoThirdSupplementalVertical.setText("Vertical");

        buttonGroup17.add(TwoThirdSupplementalHorizontal);
        TwoThirdSupplementalHorizontal.setSelected(true);
        TwoThirdSupplementalHorizontal.setText("Horizontal");

        jLabel19.setText("Location Transform");

        buttonGroup17.add(TwoThirdSupplementalTopLeftOut);
        TwoThirdSupplementalTopLeftOut.setText("Top Left Corner Out");

        buttonGroup4.add(TwoFirstSupplementalChangeFillPattern);
        TwoFirstSupplementalChangeFillPattern.setText("Change Fill Pattern ");

        buttonGroup4.add(TwoSecondSupplementalChangeFillPattern);
        TwoSecondSupplementalChangeFillPattern.setText("Change Fill Pattern ");

        buttonGroup4.add(TwoThirdSupplementalChangeFillPattern);
        TwoThirdSupplementalChangeFillPattern.setText("Change Fill Pattern ");

        org.jdesktop.layout.GroupLayout LayerTwoLayout = new org.jdesktop.layout.GroupLayout(LayerTwo);
        LayerTwo.setLayout(LayerTwoLayout);
        LayerTwoLayout.setHorizontalGroup(
            LayerTwoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(LayerTwoLayout.createSequentialGroup()
                .addContainerGap()
                .add(LayerTwoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(TwoThirdSupplementalDisabled)
                    .add(TwoThirdSupplementalApplyScaling)
                    .add(TwoThirdSupplementalApplyRotation)
                    .add(TwoThirdSupplementalFillPatternRepetition)
                    .add(TwoThirdSupplementalTranslationalNumerosity)
                    .add(jLabel18)
                    .add(LayerTwoLayout.createSequentialGroup()
                        .add(LayerTwoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(TwoSecondSupplementalDisabled)
                            .add(TwoSecondSupplementalApplyScaling)
                            .add(TwoSecondSupplementalApplyRotation)
                            .add(TwoSecondSupplementalFillPatternRepetition)
                            .add(TwoSecondSupplementalTranslationalNumerosity)
                            .add(jLabel10)
                            .add(jLabel12)
                            .add(TwoFirstSupplementalDisabled)
                            .add(TwoFirstSupplementalApplyScaling)
                            .add(TwoFirstSupplementalApplyRotation)
                            .add(TwoFirstSupplementalFillPatternRepetition)
                            .add(TwoFirstSupplementalTranslationalNumerosity)
                            .add(TwoFirstSupplementalChangeFillPattern)
                            .add(TwoSecondSupplementalChangeFillPattern)
                            .add(TwoThirdSupplementalChangeFillPattern))
                        .add(42, 42, 42)
                        .add(LayerTwoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(TwoBaseTopLeftOut)
                            .add(TwoBaseDiagBL)
                            .add(TwoBaseDiagTL)
                            .add(TwoBaseVertical)
                            .add(TwoBaseHorizontal)
                            .add(jLabel9)
                            .add(TwoFirstSupplementalDiagBL)
                            .add(TwoFirstSupplementalDiagTL)
                            .add(TwoFirstSupplementalVertical)
                            .add(TwoFirstSupplementalHorizontal)
                            .add(jLabel13)
                            .add(TwoFirstSupplementalTopLeftOut)
                            .add(TwoSecondSupplementalDiagBL)
                            .add(TwoSecondSupplementalDiagTL)
                            .add(TwoSecondSupplementalVertical)
                            .add(TwoSecondSupplementalHorizontal)
                            .add(jLabel11)
                            .add(TwoSecondSupplementalTopLeftOut)
                            .add(TwoThirdSupplementalDiagBL)
                            .add(TwoThirdSupplementalDiagTL)
                            .add(TwoThirdSupplementalVertical)
                            .add(TwoThirdSupplementalHorizontal)
                            .add(jLabel19)
                            .add(TwoThirdSupplementalTopLeftOut))))
                .addContainerGap(20, Short.MAX_VALUE))
            .add(LayerTwoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(LayerTwoLayout.createSequentialGroup()
                    .addContainerGap()
                    .add(LayerTwoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(jLabel8)
                        .add(TwoBaseShapeRepetition)
                        .add(TwoBaseOR)
                        .add(TwoBaseAND)
                        .add(TwoBaseXOR))
                    .addContainerGap(315, Short.MAX_VALUE)))
        );
        LayerTwoLayout.setVerticalGroup(
            LayerTwoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(LayerTwoLayout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel9)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(TwoBaseHorizontal)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(TwoBaseVertical)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(TwoBaseDiagTL)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(TwoBaseDiagBL)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(TwoBaseTopLeftOut)
                .add(18, 18, 18)
                .add(LayerTwoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(LayerTwoLayout.createSequentialGroup()
                        .add(jLabel12)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(TwoFirstSupplementalDisabled)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(TwoFirstSupplementalApplyRotation)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(TwoFirstSupplementalApplyScaling)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(TwoFirstSupplementalFillPatternRepetition)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(TwoFirstSupplementalChangeFillPattern)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(TwoFirstSupplementalTranslationalNumerosity))
                    .add(LayerTwoLayout.createSequentialGroup()
                        .add(jLabel13)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(TwoFirstSupplementalHorizontal)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(TwoFirstSupplementalVertical)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(TwoFirstSupplementalDiagTL)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(TwoFirstSupplementalDiagBL))
                    .add(LayerTwoLayout.createSequentialGroup()
                        .add(138, 138, 138)
                        .add(TwoFirstSupplementalTopLeftOut)))
                .add(24, 24, 24)
                .add(LayerTwoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(LayerTwoLayout.createSequentialGroup()
                        .add(jLabel10)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(TwoSecondSupplementalDisabled)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(TwoSecondSupplementalApplyRotation)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(TwoSecondSupplementalApplyScaling)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(TwoSecondSupplementalFillPatternRepetition)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(TwoSecondSupplementalChangeFillPattern)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(TwoSecondSupplementalTranslationalNumerosity))
                    .add(LayerTwoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(LayerTwoLayout.createSequentialGroup()
                            .add(jLabel11)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(TwoSecondSupplementalHorizontal)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(TwoSecondSupplementalVertical)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(TwoSecondSupplementalDiagTL)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(TwoSecondSupplementalDiagBL))
                        .add(LayerTwoLayout.createSequentialGroup()
                            .add(138, 138, 138)
                            .add(TwoSecondSupplementalTopLeftOut))))
                .add(18, 18, 18)
                .add(LayerTwoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(LayerTwoLayout.createSequentialGroup()
                        .add(jLabel18)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(TwoThirdSupplementalDisabled)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(TwoThirdSupplementalApplyRotation)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(TwoThirdSupplementalApplyScaling)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(TwoThirdSupplementalFillPatternRepetition)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(TwoThirdSupplementalChangeFillPattern)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(TwoThirdSupplementalTranslationalNumerosity))
                    .add(LayerTwoLayout.createSequentialGroup()
                        .add(jLabel19)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(TwoThirdSupplementalHorizontal)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(TwoThirdSupplementalVertical)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(TwoThirdSupplementalDiagTL)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(TwoThirdSupplementalDiagBL))
                    .add(LayerTwoLayout.createSequentialGroup()
                        .add(138, 138, 138)
                        .add(TwoThirdSupplementalTopLeftOut)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .add(LayerTwoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(LayerTwoLayout.createSequentialGroup()
                    .add(5, 5, 5)
                    .add(jLabel8)
                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                    .add(TwoBaseShapeRepetition)
                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                    .add(TwoBaseAND)
                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                    .add(TwoBaseOR)
                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                    .add(TwoBaseXOR)
                    .addContainerGap(597, Short.MAX_VALUE)))
        );

        Generate.setText("Generate");
        Generate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenerateActionPerformed(evt);
            }
        });

        jLabel14.setText("Layer One");

        jLabel15.setText("Layer Two");

        jLabel16.setText("Correct Answer Position [1-8]:");

        correctAnswerPositionFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        correctAnswerPositionFormattedTextField.setText("1");

        jLabel17.setText("Random Number Generator Seed:");

        rngSeedFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        rngSeedFormattedTextField.setText("1");

        newSeedButton.setText("New Seed");
        newSeedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newSeedButtonActionPerformed(evt);
            }
        });

        saveImageButton.setText("Save Images");
        saveImageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveImageButtonActionPerformed(evt);
            }
        });
        setJMenuBar(jMenuBar3);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(layout.createSequentialGroup()
                                .add(OneLayer)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(TwoLayers)
                                .add(32, 32, 32)
                                .add(jLabel16)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(correctAnswerPositionFormattedTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 35, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(jLabel17)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(rngSeedFormattedTextField))
                            .add(layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jLabel14)
                                    .add(LayerOne, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jLabel15)
                                    .add(LayerTwo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED))
                    .add(layout.createSequentialGroup()
                        .addContainerGap(605, Short.MAX_VALUE)
                        .add(newSeedButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(Generate)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(saveImageButton)
                        .add(53, 53, 53)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(matrixImagePanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 327, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(answersImagePanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 386, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(TwoLayers)
                            .add(OneLayer)
                            .add(jLabel16)
                            .add(correctAnswerPositionFormattedTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel17)
                            .add(rngSeedFormattedTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                                .add(jLabel14)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(LayerOne, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .add(layout.createSequentialGroup()
                                .add(jLabel15)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(LayerTwo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 33, Short.MAX_VALUE)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(Generate)
                            .add(newSeedButton)
                            .add(saveImageButton))
                        .addContainerGap())
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(matrixImagePanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 315, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(answersImagePanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 300, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void GenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenerateActionPerformed
        // Initialize matrix settings
        SGMMatrixSize sgmMatrixSize = new SGMMatrixSize(3, 3);
        int numLayers = (OneLayer.isSelected()?1:2);
        int maxStructureFeaturesPerLayer = 3;
        int numAnswerChoices = 8;
        int correctAnswerPosition = Integer.decode(
            correctAnswerPositionFormattedTextField.getText()) - 1;
        RasterSettings rasterSettings = new RasterSettings(
            1000, 1000, sgmCellImagePixelSize, pixelsBetweenCells);
        
        // Generate matrix
        this.currentMatrix = this.generateMatrix(
            sgmMatrixSize, numLayers, maxStructureFeaturesPerLayer,
            numAnswerChoices, correctAnswerPosition, rasterSettings);        
     
        // Display the generated sgmMatrix
        SGMMatrixImage sgmMatrixImage =
            new SGMMatrixImage(sgmCellImagePixelSize, pixelsBetweenCells,
            currentMatrix, -1);
        this.getMatrixImagePanel().setImage(sgmMatrixImage);

        // Display the answer choices        
        SGMAnswerChoicesImage sgmAnswerChoicesImage =
            new SGMAnswerChoicesImage(sgmCellImagePixelSize,
            pixelsBetweenCells, numAnswerMatrixColumns, currentMatrix);
        this.getAnswersImagePanel().setImage(sgmAnswerChoicesImage);
        this.paintAll(this.getGraphics());

        // Display the explanation for the matrix
        this.explanationTextArea.setText(""); 
        this.explain();        
}//GEN-LAST:event_GenerateActionPerformed

private void newSeedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newSeedButtonActionPerformed
    this.rngSeedFormattedTextField.setText(
            Long.toString(System.currentTimeMillis()));
}//GEN-LAST:event_newSeedButtonActionPerformed

private void saveImageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveImageButtonActionPerformed
        File file = new File("generatedSGM.png");
        try
        {//GEN-LAST:event_saveImageButtonActionPerformed
            ImageIO.write((BufferedImage) this.matrixImagePanel.getImage(), "png", file);
        }
        catch (IOException ex)
        {
            Logger.getLogger(SGMBuilderFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        file = new File("generatedSGMAnswers.png");
        try
        {
            ImageIO.write((BufferedImage) this.answersImagePanel.getImage(), "png", file);
        }
        catch (IOException ex)
        {
            Logger.getLogger(SGMBuilderFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
}

    public SGMMatrix generateMatrix(
        final SGMMatrixSize sgmMatrixSize,
        final int numLayers,
        final int maxStructureFeaturesPerLayer,
        final int numAnswerChoices,
        final int correctAnswerPosition,
        final RasterSettings rasterSettings)
    {                
        Random random = new Random(Long.decode(
            rngSeedFormattedTextField.getText()));
        boolean finished = false;
        SGMMatrix matrix = null;
        while (!finished)
        {      
            // Create each layer
            ArrayList<SGMLayer> sgmLayers =
                new ArrayList<SGMLayer>(numLayers);
            
            // Layer one
            int numStructureFeatures =
                (OneThirdSupplementalDisabled.isSelected()?                    
                    (OneSecondSupplementalDisabled.isSelected()?
                        (OneFirstSupplementalDisabled.isSelected()?1:2):3):4);            
            List<SGMStructureFeature> structureFeatures =
                new ArrayList<SGMStructureFeature>(numStructureFeatures);

            BaseStructureFeatureType baseStructureFeatureType =
                (OneBaseShapeRepetition.isSelected()?
                    BaseStructureFeatureType.SHAPE_REPETITION:
                    (OneBaseAND.isSelected()?
                        BaseStructureFeatureType.LOGICAL_AND:
                        (OneBaseOR.isSelected()?
                            BaseStructureFeatureType.LOGICAL_OR:
                            BaseStructureFeatureType.LOGICAL_XOR)));
            LocationTransformType locationTransformType =
                (OneBaseVertical.isSelected()?
                    LocationTransformType.VERTICAL:
                    (OneBaseHorizontal.isSelected()?
                        LocationTransformType.HORIZONTAL:
                        (OneBaseDiagTL.isSelected()?
                            LocationTransformType.DIAGONAL_TOP_LEFT_TO_BOTTOM_RIGHT:
                            (OneBaseDiagBL.isSelected()?
                                LocationTransformType.DIAGONAL_BOTTOM_LEFT_TO_TOP_RIGHT:
                                LocationTransformType.TOP_LEFT_CORNER_OUT))));
            BaseSGMStructureFeature baseStructureFeature =
                BaseSGMStructureFeatureGenerator.
                generateStructureFeature(sgmMatrixSize,
                sgmCellImagePixelSize, random,
                baseStructureFeatureType, locationTransformType);
            structureFeatures.add(baseStructureFeature); 
            
            if (numStructureFeatures > 1)
            {
                SupplementalStructureFeatureType supplementalStructureFeatureType =
                    (OneFirstSupplementalApplyRotation.isSelected()?
                        SupplementalStructureFeatureType.APPLY_ROTATION:
                        (OneFirstSupplementalApplyScaling.isSelected()?
                            SupplementalStructureFeatureType.APPLY_SCALING:
                            (OneFirstSupplementalFillPatternRepetition.isSelected()?
                                SupplementalStructureFeatureType.FILL_PATTERN_REPETITION:
                                (OneFirstSupplementalChangeFillPattern.isSelected()?
                                    SupplementalStructureFeatureType.CHANGE_FILL_PATTERN:
                                    SupplementalStructureFeatureType.TRANSLATIONAL_NUMEROSITY))));
                locationTransformType =
                    (OneFirstSupplementalVertical.isSelected()?
                        LocationTransformType.VERTICAL:
                        (OneFirstSupplementalHorizontal.isSelected()?
                            LocationTransformType.HORIZONTAL:
                            (OneFirstSupplementalDiagTL.isSelected()?
                                LocationTransformType.DIAGONAL_TOP_LEFT_TO_BOTTOM_RIGHT:
                                (OneFirstSupplementalDiagBL.isSelected()?
                                    LocationTransformType.DIAGONAL_BOTTOM_LEFT_TO_TOP_RIGHT:
                                    LocationTransformType.TOP_LEFT_CORNER_OUT))));
                SupplementalSGMStructureFeature supplementalStructureFeature =
                    SupplementalSGMStructureFeatureGenerator.
                    generateStructureFeature(sgmMatrixSize,
                    sgmCellImagePixelSize, random,
                    supplementalStructureFeatureType, locationTransformType);
                structureFeatures.add(supplementalStructureFeature);    
            }
            
            if (numStructureFeatures > 2)
            {
                SupplementalStructureFeatureType supplementalStructureFeatureType =
                    (OneSecondSupplementalApplyRotation.isSelected()?
                        SupplementalStructureFeatureType.APPLY_ROTATION:
                        (OneSecondSupplementalApplyScaling.isSelected()?
                            SupplementalStructureFeatureType.APPLY_SCALING:
                            (OneSecondSupplementalFillPatternRepetition.isSelected()?
                                SupplementalStructureFeatureType.FILL_PATTERN_REPETITION:
                                (OneSecondSupplementalChangeFillPattern.isSelected()?
                                    SupplementalStructureFeatureType.CHANGE_FILL_PATTERN:
                                    SupplementalStructureFeatureType.TRANSLATIONAL_NUMEROSITY))));
                locationTransformType =
                    (OneSecondSupplementalVertical.isSelected()?
                        LocationTransformType.VERTICAL:
                        (OneSecondSupplementalHorizontal.isSelected()?
                            LocationTransformType.HORIZONTAL:
                            (OneSecondSupplementalDiagTL.isSelected()?
                                LocationTransformType.DIAGONAL_TOP_LEFT_TO_BOTTOM_RIGHT:
                                (OneSecondSupplementalDiagBL.isSelected()?
                                    LocationTransformType.DIAGONAL_BOTTOM_LEFT_TO_TOP_RIGHT:
                                    LocationTransformType.TOP_LEFT_CORNER_OUT))));
                SupplementalSGMStructureFeature supplementalStructureFeature =
                    SupplementalSGMStructureFeatureGenerator.
                    generateStructureFeature(sgmMatrixSize,
                    sgmCellImagePixelSize, random,
                    supplementalStructureFeatureType, locationTransformType);
                structureFeatures.add(supplementalStructureFeature);    
            }
            
            if (numStructureFeatures > 3)
            {
                SupplementalStructureFeatureType supplementalStructureFeatureType =
                    (OneThirdSupplementalApplyRotation.isSelected()?
                        SupplementalStructureFeatureType.APPLY_ROTATION:
                        (OneThirdSupplementalApplyScaling.isSelected()?
                            SupplementalStructureFeatureType.APPLY_SCALING:
                            (OneThirdSupplementalFillPatternRepetition.isSelected()?
                                SupplementalStructureFeatureType.FILL_PATTERN_REPETITION:
                                (OneThirdSupplementalChangeFillPattern.isSelected()?
                                    SupplementalStructureFeatureType.CHANGE_FILL_PATTERN:
                                    SupplementalStructureFeatureType.TRANSLATIONAL_NUMEROSITY))));
                locationTransformType =
                    (OneThirdSupplementalVertical.isSelected()?
                        LocationTransformType.VERTICAL:
                        (OneThirdSupplementalHorizontal.isSelected()?
                            LocationTransformType.HORIZONTAL:
                            (OneThirdSupplementalDiagTL.isSelected()?
                                LocationTransformType.DIAGONAL_TOP_LEFT_TO_BOTTOM_RIGHT:
                                (OneThirdSupplementalDiagBL.isSelected()?
                                    LocationTransformType.DIAGONAL_BOTTOM_LEFT_TO_TOP_RIGHT:
                                    LocationTransformType.TOP_LEFT_CORNER_OUT))));
                SupplementalSGMStructureFeature supplementalStructureFeature =
                    SupplementalSGMStructureFeatureGenerator.
                    generateStructureFeature(sgmMatrixSize,
                    sgmCellImagePixelSize, random,
                    supplementalStructureFeatureType, locationTransformType);
                structureFeatures.add(supplementalStructureFeature);    
            }
            
            sgmLayers.add(new SGMLayer(sgmMatrixSize, structureFeatures));
            
            // Layer two (if specified)
            if (numLayers > 1)
            {
                numStructureFeatures =
                    (TwoThirdSupplementalDisabled.isSelected()?                    
                        (TwoSecondSupplementalDisabled.isSelected()?
                            (TwoFirstSupplementalDisabled.isSelected()?1:2):3):4); 
                structureFeatures =
                    new ArrayList<SGMStructureFeature>(numStructureFeatures);

                baseStructureFeatureType =
                    (TwoBaseShapeRepetition.isSelected()?
                        BaseStructureFeatureType.SHAPE_REPETITION:
                        (TwoBaseAND.isSelected()?
                            BaseStructureFeatureType.LOGICAL_AND:
                            (TwoBaseOR.isSelected()?
                                BaseStructureFeatureType.LOGICAL_OR:
                                BaseStructureFeatureType.LOGICAL_XOR)));
                locationTransformType =
                    (TwoBaseVertical.isSelected()?
                        LocationTransformType.VERTICAL:
                        (TwoBaseHorizontal.isSelected()?
                            LocationTransformType.HORIZONTAL:
                            (TwoBaseDiagTL.isSelected()?
                                LocationTransformType.DIAGONAL_TOP_LEFT_TO_BOTTOM_RIGHT:
                                (TwoBaseDiagBL.isSelected()?
                                    LocationTransformType.DIAGONAL_BOTTOM_LEFT_TO_TOP_RIGHT:
                                    LocationTransformType.TOP_LEFT_CORNER_OUT))));
                baseStructureFeature =            
                    BaseSGMStructureFeatureGenerator.
                    generateStructureFeature(sgmMatrixSize,
                    sgmCellImagePixelSize, random,
                    baseStructureFeatureType, locationTransformType);
                structureFeatures.add(baseStructureFeature); 

                if (numStructureFeatures > 1)
                {
                    SupplementalStructureFeatureType supplementalStructureFeatureType =
                        (TwoFirstSupplementalApplyRotation.isSelected()?
                            SupplementalStructureFeatureType.APPLY_ROTATION:
                            (TwoFirstSupplementalApplyScaling.isSelected()?
                                SupplementalStructureFeatureType.APPLY_SCALING:
                                (TwoFirstSupplementalFillPatternRepetition.isSelected()?
                                    SupplementalStructureFeatureType.FILL_PATTERN_REPETITION:
                                    (TwoFirstSupplementalChangeFillPattern.isSelected()?
                                        SupplementalStructureFeatureType.CHANGE_FILL_PATTERN:
                                        SupplementalStructureFeatureType.TRANSLATIONAL_NUMEROSITY))));
                    locationTransformType =
                        (TwoFirstSupplementalVertical.isSelected()?
                            LocationTransformType.VERTICAL:
                            (TwoFirstSupplementalHorizontal.isSelected()?
                                LocationTransformType.HORIZONTAL:
                                (TwoFirstSupplementalDiagTL.isSelected()?
                                    LocationTransformType.DIAGONAL_TOP_LEFT_TO_BOTTOM_RIGHT:
                                    (TwoFirstSupplementalDiagBL.isSelected()?
                                        LocationTransformType.DIAGONAL_BOTTOM_LEFT_TO_TOP_RIGHT:
                                        LocationTransformType.TOP_LEFT_CORNER_OUT))));
                    SupplementalSGMStructureFeature supplementalStructureFeature =
                        SupplementalSGMStructureFeatureGenerator.
                        generateStructureFeature(sgmMatrixSize,
                        sgmCellImagePixelSize, random,
                        supplementalStructureFeatureType, locationTransformType);
                    structureFeatures.add(supplementalStructureFeature);    
                }

                if (numStructureFeatures > 2)
                {
                    SupplementalStructureFeatureType supplementalStructureFeatureType =
                        (TwoSecondSupplementalApplyRotation.isSelected()?
                            SupplementalStructureFeatureType.APPLY_ROTATION:
                            (TwoSecondSupplementalApplyScaling.isSelected()?
                                SupplementalStructureFeatureType.APPLY_SCALING:
                                (TwoSecondSupplementalFillPatternRepetition.isSelected()?
                                    SupplementalStructureFeatureType.FILL_PATTERN_REPETITION:
                                    (TwoSecondSupplementalChangeFillPattern.isSelected()?
                                        SupplementalStructureFeatureType.CHANGE_FILL_PATTERN:
                                        SupplementalStructureFeatureType.TRANSLATIONAL_NUMEROSITY))));
                    locationTransformType =
                        (TwoSecondSupplementalVertical.isSelected()?
                            LocationTransformType.VERTICAL:
                            (TwoSecondSupplementalHorizontal.isSelected()?
                                LocationTransformType.HORIZONTAL:
                                (TwoSecondSupplementalDiagTL.isSelected()?
                                    LocationTransformType.DIAGONAL_TOP_LEFT_TO_BOTTOM_RIGHT:
                                    (TwoSecondSupplementalDiagBL.isSelected()?
                                        LocationTransformType.DIAGONAL_BOTTOM_LEFT_TO_TOP_RIGHT:
                                        LocationTransformType.TOP_LEFT_CORNER_OUT))));
                    SupplementalSGMStructureFeature supplementalStructureFeature =
                        SupplementalSGMStructureFeatureGenerator.
                        generateStructureFeature(sgmMatrixSize,
                        sgmCellImagePixelSize, random,
                        supplementalStructureFeatureType, locationTransformType);
                    structureFeatures.add(supplementalStructureFeature);    
                }
                
                if (numStructureFeatures > 3)
                {
                    SupplementalStructureFeatureType supplementalStructureFeatureType =
                        (TwoThirdSupplementalApplyRotation.isSelected()?
                            SupplementalStructureFeatureType.APPLY_ROTATION:
                            (TwoThirdSupplementalApplyScaling.isSelected()?
                                SupplementalStructureFeatureType.APPLY_SCALING:
                                (TwoThirdSupplementalFillPatternRepetition.isSelected()?
                                    SupplementalStructureFeatureType.FILL_PATTERN_REPETITION:
                                    (TwoThirdSupplementalChangeFillPattern.isSelected()?
                                        SupplementalStructureFeatureType.CHANGE_FILL_PATTERN:
                                        SupplementalStructureFeatureType.TRANSLATIONAL_NUMEROSITY))));
                    locationTransformType =
                        (TwoThirdSupplementalVertical.isSelected()?
                            LocationTransformType.VERTICAL:
                            (TwoThirdSupplementalHorizontal.isSelected()?
                                LocationTransformType.HORIZONTAL:
                                (TwoThirdSupplementalDiagTL.isSelected()?
                                    LocationTransformType.DIAGONAL_TOP_LEFT_TO_BOTTOM_RIGHT:
                                    (TwoThirdSupplementalDiagBL.isSelected()?
                                        LocationTransformType.DIAGONAL_BOTTOM_LEFT_TO_TOP_RIGHT:
                                        LocationTransformType.TOP_LEFT_CORNER_OUT))));
                    SupplementalSGMStructureFeature supplementalStructureFeature =
                        SupplementalSGMStructureFeatureGenerator.
                        generateStructureFeature(sgmMatrixSize,
                        sgmCellImagePixelSize, random,
                        supplementalStructureFeatureType, locationTransformType);
                    structureFeatures.add(supplementalStructureFeature);    
                }

                sgmLayers.add(new SGMLayer(sgmMatrixSize, structureFeatures));
            }
                
            // Collect the layers into a matrix
            matrix = new SGMMatrix(sgmMatrixSize,
                numAnswerChoices, correctAnswerPosition,
                sgmLayers, random);

            // Make sure enough answer choices were generated
            // cew 081104 - taking this out to prevent GUI from hanging
//            if (matrix.getNumAnswerChoicesGenerated() < numAnswerChoices)
//            {
//                continue;
//            }           
            
            finished = true;
        }
        
        return matrix;
    }
    
    private void explain() {
        // Provide a textual explanation of current matrix
        this.explanationTextArea.setText("");
        
        if (currentMatrix == null)
        {
            return;
        }
               
        // Display correct answer
        int correctAnswer = currentMatrix.getCorrectAnswerPosition() + 1;
        this.explanationTextArea.append("Correct answer is: " + correctAnswer + "\n\n");
                        
        // Explain layer by layer       
        this.explanationTextArea.append("The matrix has " + 
            currentMatrix.getSGMLayers().size() + " layer(s)\n");
        int i = 1;
        for (SGMLayer layer : currentMatrix.getSGMLayers())
        {
            this.explanationTextArea.append("\nLayer " + i + "\n");
            this.explanationTextArea.append("  The layer has " + 
                layer.getStructureFeatures().size() + 
                " structure feature(s)\n");
            int j = 1;
            for (SGMStructureFeature feature : layer.getStructureFeatures())
            {
                this.explanationTextArea.append("    Structure feature " + j + " is " +
                    feature.getDescription() + "\n");
                this.explanationTextArea.append("      Location transform: " +
                    feature.getLocationTransform().getDescription() + "\n");
                j++;
            }
            
            i++;
        }
    }    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        // When running under Mac OS, be more Mac-like
        System.setProperty("apple.laf.useScreenMenuBar", "true");       
        
        java.awt.EventQueue.invokeLater(new Runnable()
        {

            public void run()
            {
                new SGMBuilderFrame().setVisible(true);
            }
        });
    }
    
    protected gov.sandia.cognition.generator.matrix.ui.ImagePanel getMatrixImagePanel()
    {
        return matrixImagePanel;
    }

    protected gov.sandia.cognition.generator.matrix.ui.ImagePanel getAnswersImagePanel()
    {
        return answersImagePanel;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Generate;
    private javax.swing.JPanel LayerOne;
    private javax.swing.JPanel LayerTwo;
    private javax.swing.JRadioButton OneBaseAND;
    private javax.swing.JRadioButton OneBaseDiagBL;
    private javax.swing.JRadioButton OneBaseDiagTL;
    private javax.swing.JRadioButton OneBaseHorizontal;
    private javax.swing.JRadioButton OneBaseOR;
    private javax.swing.JRadioButton OneBaseShapeRepetition;
    private javax.swing.JRadioButton OneBaseTopLeftOut;
    private javax.swing.JRadioButton OneBaseVertical;
    private javax.swing.JRadioButton OneBaseXOR;
    private javax.swing.JRadioButton OneFirstSupplementalApplyRotation;
    private javax.swing.JRadioButton OneFirstSupplementalApplyScaling;
    private javax.swing.JRadioButton OneFirstSupplementalChangeFillPattern;
    private javax.swing.JRadioButton OneFirstSupplementalDiagBL;
    private javax.swing.JRadioButton OneFirstSupplementalDiagTL;
    private javax.swing.JRadioButton OneFirstSupplementalDisabled;
    private javax.swing.JRadioButton OneFirstSupplementalFillPatternRepetition;
    private javax.swing.JRadioButton OneFirstSupplementalHorizontal;
    private javax.swing.JRadioButton OneFirstSupplementalTopLeftOut;
    private javax.swing.JRadioButton OneFirstSupplementalTranslationalNumerosity;
    private javax.swing.JRadioButton OneFirstSupplementalVertical;
    private javax.swing.JRadioButton OneLayer;
    private javax.swing.JRadioButton OneSecondSupplementalApplyRotation;
    private javax.swing.JRadioButton OneSecondSupplementalApplyScaling;
    private javax.swing.JRadioButton OneSecondSupplementalChangeFillPattern;
    private javax.swing.JRadioButton OneSecondSupplementalDiagBL;
    private javax.swing.JRadioButton OneSecondSupplementalDiagTL;
    private javax.swing.JRadioButton OneSecondSupplementalDisabled;
    private javax.swing.JRadioButton OneSecondSupplementalFillPatternRepetition;
    private javax.swing.JRadioButton OneSecondSupplementalHorizontal;
    private javax.swing.JRadioButton OneSecondSupplementalTopLeftOut;
    private javax.swing.JRadioButton OneSecondSupplementalTranslationalNumerosity;
    private javax.swing.JRadioButton OneSecondSupplementalVertical;
    private javax.swing.JRadioButton OneThirdSupplementalApplyRotation;
    private javax.swing.JRadioButton OneThirdSupplementalApplyScaling;
    private javax.swing.JRadioButton OneThirdSupplementalChangeFillPattern;
    private javax.swing.JRadioButton OneThirdSupplementalDiagBL;
    private javax.swing.JRadioButton OneThirdSupplementalDiagTL;
    private javax.swing.JRadioButton OneThirdSupplementalDisabled;
    private javax.swing.JRadioButton OneThirdSupplementalFillPatternRepetition;
    private javax.swing.JRadioButton OneThirdSupplementalHorizontal;
    private javax.swing.JRadioButton OneThirdSupplementalTopLeftOut;
    private javax.swing.JRadioButton OneThirdSupplementalTranslationalNumerosity;
    private javax.swing.JRadioButton OneThirdSupplementalVertical;
    private javax.swing.JRadioButton TwoBaseAND;
    private javax.swing.JRadioButton TwoBaseDiagBL;
    private javax.swing.JRadioButton TwoBaseDiagTL;
    private javax.swing.JRadioButton TwoBaseHorizontal;
    private javax.swing.JRadioButton TwoBaseOR;
    private javax.swing.JRadioButton TwoBaseShapeRepetition;
    private javax.swing.JRadioButton TwoBaseTopLeftOut;
    private javax.swing.JRadioButton TwoBaseVertical;
    private javax.swing.JRadioButton TwoBaseXOR;
    private javax.swing.JRadioButton TwoFirstSupplementalApplyRotation;
    private javax.swing.JRadioButton TwoFirstSupplementalApplyScaling;
    private javax.swing.JRadioButton TwoFirstSupplementalChangeFillPattern;
    private javax.swing.JRadioButton TwoFirstSupplementalDiagBL;
    private javax.swing.JRadioButton TwoFirstSupplementalDiagTL;
    private javax.swing.JRadioButton TwoFirstSupplementalDisabled;
    private javax.swing.JRadioButton TwoFirstSupplementalFillPatternRepetition;
    private javax.swing.JRadioButton TwoFirstSupplementalHorizontal;
    private javax.swing.JRadioButton TwoFirstSupplementalTopLeftOut;
    private javax.swing.JRadioButton TwoFirstSupplementalTranslationalNumerosity;
    private javax.swing.JRadioButton TwoFirstSupplementalVertical;
    private javax.swing.JRadioButton TwoLayers;
    private javax.swing.JRadioButton TwoSecondSupplementalApplyRotation;
    private javax.swing.JRadioButton TwoSecondSupplementalApplyScaling;
    private javax.swing.JRadioButton TwoSecondSupplementalChangeFillPattern;
    private javax.swing.JRadioButton TwoSecondSupplementalDiagBL;
    private javax.swing.JRadioButton TwoSecondSupplementalDiagTL;
    private javax.swing.JRadioButton TwoSecondSupplementalDisabled;
    private javax.swing.JRadioButton TwoSecondSupplementalFillPatternRepetition;
    private javax.swing.JRadioButton TwoSecondSupplementalHorizontal;
    private javax.swing.JRadioButton TwoSecondSupplementalTopLeftOut;
    private javax.swing.JRadioButton TwoSecondSupplementalTranslationalNumerosity;
    private javax.swing.JRadioButton TwoSecondSupplementalVertical;
    private javax.swing.JRadioButton TwoThirdSupplementalApplyRotation;
    private javax.swing.JRadioButton TwoThirdSupplementalApplyScaling;
    private javax.swing.JRadioButton TwoThirdSupplementalChangeFillPattern;
    private javax.swing.JRadioButton TwoThirdSupplementalDiagBL;
    private javax.swing.JRadioButton TwoThirdSupplementalDiagTL;
    private javax.swing.JRadioButton TwoThirdSupplementalDisabled;
    private javax.swing.JRadioButton TwoThirdSupplementalFillPatternRepetition;
    private javax.swing.JRadioButton TwoThirdSupplementalHorizontal;
    private javax.swing.JRadioButton TwoThirdSupplementalTopLeftOut;
    private javax.swing.JRadioButton TwoThirdSupplementalTranslationalNumerosity;
    private javax.swing.JRadioButton TwoThirdSupplementalVertical;
    private gov.sandia.cognition.generator.matrix.ui.ImagePanel answersImagePanel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup10;
    private javax.swing.ButtonGroup buttonGroup11;
    private javax.swing.ButtonGroup buttonGroup12;
    private javax.swing.ButtonGroup buttonGroup13;
    private javax.swing.ButtonGroup buttonGroup14;
    private javax.swing.ButtonGroup buttonGroup15;
    private javax.swing.ButtonGroup buttonGroup16;
    private javax.swing.ButtonGroup buttonGroup17;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.ButtonGroup buttonGroup6;
    private javax.swing.ButtonGroup buttonGroup7;
    private javax.swing.ButtonGroup buttonGroup8;
    private javax.swing.ButtonGroup buttonGroup9;
    private javax.swing.JFormattedTextField correctAnswerPositionFormattedTextField;
    private javax.swing.JTextArea explanationTextArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar3;
    private javax.swing.JScrollPane jScrollPane1;
    private gov.sandia.cognition.generator.matrix.ui.ImagePanel matrixImagePanel;
    private javax.swing.JButton newSeedButton;
    private javax.swing.JFormattedTextField rngSeedFormattedTextField;
    private javax.swing.JButton saveImageButton;
    // End of variables declaration//GEN-END:variables
}
